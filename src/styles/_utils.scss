@import "./variables";

@mixin mobile {
  @media screen and (max-width: $sMobile) {
    @content;
  }
}

@mixin desktop {
  @media screen and (min-width: calc($sMobile + 1px)) {
    @content;
  }
}

@mixin colorCodedButton($type...) {
  button.colorCoded {
    padding: 0.25rem 0.75rem;
    border-radius: 1rem;
    font-weight: 600;

    &.unknown {
      background-color: var(--c-unknown);
      color: var(--c-unknown-text);
    }

    @if index($type, $studentState) {
      &.canceled {
        background-color: var(--c-canceled);
        color: var(--c-white);
      }

      &.active {
        background-color: var(--c-active);
        color: var(--c-white);
      }

      &.pending {
        background-color: var(--c-pending);
        color: var(--c-white);
      }

      &.finished {
        background-color: var(--c-finished);
        color: var(--c-white);
      }

      &.postponed {
        background-color: var(--c-postponed);
        color: var(--c-white);
      }
    }

    @if index($type, $subscription) {
      &.fullPay {
        background-color: var(--c-success-dark);
        color: var(--c-white);
      }

      &.partialPay {
        background-color: var(--c-success);
        color: var(--c-white);
      }

      &.noPay {
        background-color: var(--c-success-light);
        color: var(--c-success-dark);
      }
    }
  }
}

@mixin optionsList {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
}

@mixin checkMark($x: 0px, $y: 0px) {
  content: "";
  width: 1rem;
  height: 0.5rem;
  border-left: 2px solid var(--c-white);
  border-bottom: 2px solid var(--c-white);
  position: absolute;
  transform: translate($x, $y) rotate(-45deg);
}

@mixin mainButton {
  height: 3rem;
  padding: 1rem 2rem;
  border-radius: 0.25rem;
  background-color: var(--c-success);
  font-size: 1rem;
  font-weight: 600;
  color: var(--c-white);
  text-transform: capitalize;
}

@mixin noFieldBorder {
  border: none;

  &:focus-within {
    border: none;
    outline: none;
  }

  &.invalid {
    border: none;
    outline: none;
  }
}

@mixin fieldBorder {
  border: 1px solid var(--c-shadow-dark);
  border-radius: 0.375rem;

  &:focus-within {
    outline: 2px solid var(--c-primary-light);
    border-color: var(--c-primary-light);
  }

  &.invalid {
    outline: 2px solid var(--c-error);
    border-color: var(--c-error);
  }
}

@mixin errorMessage {
  .ErrorMessage {
    position: absolute;
    width: 100%;
  }
}
