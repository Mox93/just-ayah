@use "sass:map";
@use "colors" as *;

// Screen Sizes
// can't use var or calc in @media
$mobileSize: 35rem;
$desktopSize: 35.01rem;

@mixin mobile {
  @media screen and (max-width: $mobileSize) {
    @content;
  }
}

@mixin desktop {
  @media screen and (min-width: $desktopSize) {
    @content;
  }
}

@mixin ltrDir($parent: null, $child: null) {
  &[dir="ltr"] {
    @content;
  }

  @if $child {
    @at-root [dir="ltr"] #{$child}:not([dir="rtl"]) {
      @content;
    }

    @if $parent {
      @at-root #{$parent}[dir="ltr"] #{$child}:not([dir="rtl"]) {
        @content;
      }
    }
  } @else {
    [dir="ltr"] &:not([dir="rtl"]) {
      @content;
    }
  }
}

@mixin rtlDir($parent: null, $child: null) {
  &[dir="rtl"] {
    @content;
  }

  @if $child {
    @at-root [dir="rtl"] #{$child}:not([dir="ltr"]) {
      @content;
    }

    @if $parent {
      @at-root #{$parent}[dir="rtl"] #{$child}:not([dir="ltr"]) {
        @content;
      }
    }
  } @else {
    [dir="rtl"] &:not([dir="ltr"]) {
      @content;
    }
  }
}

@mixin positioning(
  $parent: null,
  $child: null,
  $position: absolute,
  $blockDir: start,
  $inlineDir: start,
  $x: -50%,
  $y: -50%,
  $inline: 50%,
  $block: 50%
) {
  --x-displacement: #{$x};
  --y-displacement: #{$y};

  position: $position;
  transform: translate(var(--x-displacement), var(--y-displacement));

  inset-block-#{$blockDir}: $block;
  inset-inline-#{$inlineDir}: $inline;

  @if $x != 0 {
    @if $inlineDir == start {
      @include ltrDir($parent, $child) {
        --x-displacement: #{$x};
      }

      @include rtlDir($parent, $child) {
        --x-displacement: calc(#{$x} * -1);
      }
    }

    @if $inlineDir == end {
      @include rtlDir($parent, $child) {
        --x-displacement: #{$x};
      }

      @include ltrDir($parent, $child) {
        --x-displacement: calc(#{$x} * -1);
      }
    }
  }
}

@mixin withoutBorder($borderRadius: none) {
  --r-border: #{$borderRadius};

  border-radius: var(--r-border);
  border: none;

  &:focus-within {
    border: none;
    outline: none;
  }

  &.invalid {
    border: none;
    outline: none;
  }
}

@mixin withBorder(
  $states: none,
  $borderRadius: var(--radius-s),
  $borderColor: var(--c-gray-300)
) {
  --c-border: #{$borderColor};
  --r-border: #{$borderRadius};
  --c-outline: none;

  border: 1px solid var(--c-border);
  border-radius: var(--r-border);
  outline: 2px solid var(--c-outline);
  outline-offset: -2px;

  @if index($states, "focus") {
    &:focus-within {
      --c-border: var(--c-primary-200);
      --c-outline: var(--c-border);
    }
  }

  @if index($states, "invalid") {
    &.invalid {
      --c-border: var(--c-danger-300);
      --c-outline: var(--c-border);
    }
  }
}

@mixin menuItem {
  width: 100%;
  height: 2.5rem;
  display: flex;
  gap: var(--spacing-m);
  align-items: center;
  white-space: nowrap;
  overflow-x: hidden;
  text-overflow: ellipsis;
}

@mixin menuLayout {
  padding: var(--spacing-s);
  display: flex;
  flex-direction: column;
  gap: var(--spacing-s);
}

@mixin floatingLanguageSelector {
  .LanguageSelector {
    position: fixed;
    top: var(--spacing-l);
    right: var(--spacing-l);
  }
}

@mixin banner {
  .banner {
    width: 100%;
    max-height: 25rem;
    object-fit: cover;
    object-position: center;
    position: sticky;
    top: 0;
  }
}

@mixin sidebarAnimation($property, $delay: 0) {
  @if $delay != 0 {
    transition-delay: $delay;
  }

  transition-property: $property;
  transition-duration: 100ms;
  transition-timing-function: ease-in-out;
}

@mixin circle($size, $color: auto) {
  width: $size;
  min-width: $size;
  max-width: $size;
  aspect-ratio: 1;
  border-radius: 50%;

  @if $color != auto {
    background-color: $color;
  }
}

@mixin genderColorCoding {
  &[gender="male"] {
    background-color: var(--c-male);
  }

  &[gender="female"] {
    background-color: var(--c-female);
  }
}

@mixin searchField {
  .searchField {
    --fill-color: var(--c-gray-300);

    &:focus-within {
      --fill-color: var(--c-primary-300);
    }

    .FieldWrapper {
      gap: var(--spacing-m);
    }
  }
}
